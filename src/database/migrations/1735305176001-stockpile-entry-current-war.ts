import { MigrationInterface, QueryRunner } from "typeorm";

export class StockpileEntryCurrentWar1735305176001 implements MigrationInterface {
    name = 'StockpileEntryCurrentWar1735305176001'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`DELETE FROM "app"."typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ["VIEW","stockpile_entry_current","app"]);
        await queryRunner.query(`DROP VIEW "app"."stockpile_entry_current"`);
        await queryRunner.query(`CREATE VIEW "app"."stockpile_entry_current" AS SELECT DISTINCT ON ("entry"."stockpile_id", "entry"."catalog_id") "l"."id" AS "l_id", "l"."crew_id" AS "l_crew_id", "l"."location_id" AS "l_location_id", "l"."war_number" AS "l_war_number", "l"."guild_id" AS "l_guild_id", "l"."message" AS "l_message", "l"."raw" AS "l_raw", "l"."processed_at" AS "l_processed_at", "l"."created_by_sf" AS "l_created_by_sf", "l"."created_at" AS "l_created_at", "l"."deleted_by_sf" AS "l_deleted_by_sf", "l"."deleted_at" AS "l_deleted_at", "c"."id" AS "c_id", "c"."foxhole_version" AS "c_foxhole_version", "c"."catalog_version" AS "c_catalog_version", "c"."code_name" AS "c_code_name", "c"."slang" AS "c_slang", "c"."display_name" AS "c_display_name", "c"."faction" AS "c_faction", "c"."category" AS "c_category", "c"."crate_quantity" AS "c_crate_quantity", "c"."shippable_quantity" AS "c_shippable_quantity", "c"."crate_stockpile_maximum" AS "c_crate_stockpile_maximum", "c"."shippable_stockpile_maximum" AS "c_shippable_stockpile_maximum", "c"."data" AS "c_data", "c"."created_at" AS "c_created_at", entry.* FROM "app"."stockpile_entry" "entry" LEFT JOIN "app"."stockpile_log" "l" ON "l"."id"="entry"."log_id"  LEFT JOIN "app"."catalog_expanded" "c" ON "c"."id"="entry"."catalog_id"  INNER JOIN (SELECT war_number FROM "app"."war" "war" ORDER BY "war"."war_number" DESC LIMIT 1) "w" ON w.war_number="entry"."war_number" WHERE "l"."deleted_at" IS NULL ORDER BY "entry"."stockpile_id" ASC, "entry"."catalog_id" ASC, "entry"."created_at" DESC`);
        await queryRunner.query(`INSERT INTO "app"."typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, ["app","VIEW","stockpile_entry_current","SELECT DISTINCT ON (\"entry\".\"stockpile_id\", \"entry\".\"catalog_id\") \"l\".\"id\" AS \"l_id\", \"l\".\"crew_id\" AS \"l_crew_id\", \"l\".\"location_id\" AS \"l_location_id\", \"l\".\"war_number\" AS \"l_war_number\", \"l\".\"guild_id\" AS \"l_guild_id\", \"l\".\"message\" AS \"l_message\", \"l\".\"raw\" AS \"l_raw\", \"l\".\"processed_at\" AS \"l_processed_at\", \"l\".\"created_by_sf\" AS \"l_created_by_sf\", \"l\".\"created_at\" AS \"l_created_at\", \"l\".\"deleted_by_sf\" AS \"l_deleted_by_sf\", \"l\".\"deleted_at\" AS \"l_deleted_at\", \"c\".\"id\" AS \"c_id\", \"c\".\"foxhole_version\" AS \"c_foxhole_version\", \"c\".\"catalog_version\" AS \"c_catalog_version\", \"c\".\"code_name\" AS \"c_code_name\", \"c\".\"slang\" AS \"c_slang\", \"c\".\"display_name\" AS \"c_display_name\", \"c\".\"faction\" AS \"c_faction\", \"c\".\"category\" AS \"c_category\", \"c\".\"crate_quantity\" AS \"c_crate_quantity\", \"c\".\"shippable_quantity\" AS \"c_shippable_quantity\", \"c\".\"crate_stockpile_maximum\" AS \"c_crate_stockpile_maximum\", \"c\".\"shippable_stockpile_maximum\" AS \"c_shippable_stockpile_maximum\", \"c\".\"data\" AS \"c_data\", \"c\".\"created_at\" AS \"c_created_at\", entry.* FROM \"app\".\"stockpile_entry\" \"entry\" LEFT JOIN \"app\".\"stockpile_log\" \"l\" ON \"l\".\"id\"=\"entry\".\"log_id\"  LEFT JOIN \"app\".\"catalog_expanded\" \"c\" ON \"c\".\"id\"=\"entry\".\"catalog_id\"  INNER JOIN (SELECT war_number FROM \"app\".\"war\" \"war\" ORDER BY \"war\".\"war_number\" DESC LIMIT 1) \"w\" ON w.war_number=\"entry\".\"war_number\" WHERE \"l\".\"deleted_at\" IS NULL ORDER BY \"entry\".\"stockpile_id\" ASC, \"entry\".\"catalog_id\" ASC, \"entry\".\"created_at\" DESC"]);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`DELETE FROM "app"."typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ["VIEW","stockpile_entry_current","app"]);
        await queryRunner.query(`DROP VIEW "app"."stockpile_entry_current"`);
        await queryRunner.query(`CREATE VIEW "app"."stockpile_entry_current" AS SELECT DISTINCT ON ("entry"."stockpile_id", "entry"."catalog_id") "l"."id" AS "l_id", "l"."crew_id" AS "l_crew_id", "l"."location_id" AS "l_location_id", "l"."war_number" AS "l_war_number", "l"."guild_id" AS "l_guild_id", "l"."message" AS "l_message", "l"."raw" AS "l_raw", "l"."processed_at" AS "l_processed_at", "l"."created_by_sf" AS "l_created_by_sf", "l"."created_at" AS "l_created_at", "l"."deleted_by_sf" AS "l_deleted_by_sf", "l"."deleted_at" AS "l_deleted_at", "c"."id" AS "c_id", "c"."foxhole_version" AS "c_foxhole_version", "c"."catalog_version" AS "c_catalog_version", "c"."code_name" AS "c_code_name", "c"."slang" AS "c_slang", "c"."display_name" AS "c_display_name", "c"."faction" AS "c_faction", "c"."category" AS "c_category", "c"."crate_quantity" AS "c_crate_quantity", "c"."shippable_quantity" AS "c_shippable_quantity", "c"."crate_stockpile_maximum" AS "c_crate_stockpile_maximum", "c"."shippable_stockpile_maximum" AS "c_shippable_stockpile_maximum", "c"."data" AS "c_data", "c"."created_at" AS "c_created_at", entry.* FROM "app"."stockpile_entry" "entry" LEFT JOIN "app"."stockpile_log" "l" ON "l"."id"="entry"."log_id"  LEFT JOIN "app"."catalog_expanded" "c" ON "c"."id"="entry"."catalog_id" WHERE "l"."deleted_at" IS NULL ORDER BY "entry"."stockpile_id" ASC, "entry"."catalog_id" ASC, "entry"."created_at" DESC`);
        await queryRunner.query(`INSERT INTO "app"."typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, ["app","VIEW","stockpile_entry_current","SELECT DISTINCT ON (\"entry\".\"stockpile_id\", \"entry\".\"catalog_id\") \"l\".\"id\" AS \"l_id\", \"l\".\"crew_id\" AS \"l_crew_id\", \"l\".\"location_id\" AS \"l_location_id\", \"l\".\"war_number\" AS \"l_war_number\", \"l\".\"guild_id\" AS \"l_guild_id\", \"l\".\"message\" AS \"l_message\", \"l\".\"raw\" AS \"l_raw\", \"l\".\"processed_at\" AS \"l_processed_at\", \"l\".\"created_by_sf\" AS \"l_created_by_sf\", \"l\".\"created_at\" AS \"l_created_at\", \"l\".\"deleted_by_sf\" AS \"l_deleted_by_sf\", \"l\".\"deleted_at\" AS \"l_deleted_at\", \"c\".\"id\" AS \"c_id\", \"c\".\"foxhole_version\" AS \"c_foxhole_version\", \"c\".\"catalog_version\" AS \"c_catalog_version\", \"c\".\"code_name\" AS \"c_code_name\", \"c\".\"slang\" AS \"c_slang\", \"c\".\"display_name\" AS \"c_display_name\", \"c\".\"faction\" AS \"c_faction\", \"c\".\"category\" AS \"c_category\", \"c\".\"crate_quantity\" AS \"c_crate_quantity\", \"c\".\"shippable_quantity\" AS \"c_shippable_quantity\", \"c\".\"crate_stockpile_maximum\" AS \"c_crate_stockpile_maximum\", \"c\".\"shippable_stockpile_maximum\" AS \"c_shippable_stockpile_maximum\", \"c\".\"data\" AS \"c_data\", \"c\".\"created_at\" AS \"c_created_at\", entry.* FROM \"app\".\"stockpile_entry\" \"entry\" LEFT JOIN \"app\".\"stockpile_log\" \"l\" ON \"l\".\"id\"=\"entry\".\"log_id\"  LEFT JOIN \"app\".\"catalog_expanded\" \"c\" ON \"c\".\"id\"=\"entry\".\"catalog_id\" WHERE \"l\".\"deleted_at\" IS NULL ORDER BY \"entry\".\"stockpile_id\" ASC, \"entry\".\"catalog_id\" ASC, \"entry\".\"created_at\" DESC"]);
    }

}
